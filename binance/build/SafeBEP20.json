{"abi":[],"devdoc":{"details":"Wrappers around BEP20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","kind":"dev","methods":{},"title":"SafeBEP20","version":1},"evm":{"assembly":"    /* \"TEXOToken.sol\":22589:25693  library SafeBEP20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"TEXOToken.sol\":22589:25693  library SafeBEP20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220911593d49ddeddafa280ff67f02cfedbefd2ec23d78acd43602624d31a8ef32c64736f6c634300060c0033\n}\n","bytecode":{"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220911593d49ddeddafa280ff67f02cfedbefd2ec23d78acd43602624d31a8ef32c64736f6c634300060c0033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 ISZERO SWAP4 0xD4 SWAP14 0xDE 0xDD 0xAF LOG2 DUP1 SELFDESTRUCT PUSH8 0xF02CFEDBEFD2EC23 0xD7 DUP11 0xCD NUMBER PUSH1 0x26 0x24 0xD3 BYTE DUP15 RETURN 0x2C PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ","sourceMap":"22589:3104:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220911593d49ddeddafa280ff67f02cfedbefd2ec23d78acd43602624d31a8ef32c64736f6c634300060c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 ISZERO SWAP4 0xD4 SWAP14 0xDE 0xDD 0xAF LOG2 DUP1 SELFDESTRUCT PUSH8 0xF02CFEDBEFD2EC23 0xD7 DUP11 0xCD NUMBER PUSH1 0x26 0x24 0xD3 BYTE DUP15 RETURN 0x2C PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ","sourceMap":"22589:3104:0:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_callOptionalReturn(contract IBEP20,bytes memory)":"infinite","safeApprove(contract IBEP20,address,uint256)":"infinite","safeDecreaseAllowance(contract IBEP20,address,uint256)":"infinite","safeIncreaseAllowance(contract IBEP20,address,uint256)":"infinite","safeTransfer(contract IBEP20,address,uint256)":"infinite","safeTransferFrom(contract IBEP20,address,address,uint256)":"infinite"}},"legacyAssembly":{".code":[{"begin":22589,"end":25693,"name":"PUSH #[$]","source":0,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":22589,"end":25693,"name":"PUSH [$]","source":0,"value":"0000000000000000000000000000000000000000000000000000000000000000"},{"begin":22589,"end":25693,"name":"PUSH","source":0,"value":"B"},{"begin":22589,"end":25693,"name":"DUP3","source":0},{"begin":22589,"end":25693,"name":"DUP3","source":0},{"begin":22589,"end":25693,"name":"DUP3","source":0},{"begin":22589,"end":25693,"name":"CODECOPY","source":0},{"begin":22589,"end":25693,"name":"DUP1","source":0},{"begin":22589,"end":25693,"name":"MLOAD","source":0},{"begin":22589,"end":25693,"name":"PUSH","source":0,"value":"0"},{"begin":22589,"end":25693,"name":"BYTE","source":0},{"begin":22589,"end":25693,"name":"PUSH","source":0,"value":"73"},{"begin":22589,"end":25693,"name":"EQ","source":0},{"begin":22589,"end":25693,"name":"PUSH [tag]","source":0,"value":"1"},{"begin":22589,"end":25693,"name":"JUMPI","source":0},{"begin":22589,"end":25693,"name":"INVALID","source":0},{"begin":22589,"end":25693,"name":"tag","source":0,"value":"1"},{"begin":22589,"end":25693,"name":"JUMPDEST","source":0},{"begin":22589,"end":25693,"name":"ADDRESS","source":0},{"begin":22589,"end":25693,"name":"PUSH","source":0,"value":"0"},{"begin":22589,"end":25693,"name":"MSTORE","source":0},{"begin":22589,"end":25693,"name":"PUSH","source":0,"value":"73"},{"begin":22589,"end":25693,"name":"DUP2","source":0},{"begin":22589,"end":25693,"name":"MSTORE8","source":0},{"begin":22589,"end":25693,"name":"DUP3","source":0},{"begin":22589,"end":25693,"name":"DUP2","source":0},{"begin":22589,"end":25693,"name":"RETURN","source":0}],".data":{"0":{".auxdata":"a2646970667358221220911593d49ddeddafa280ff67f02cfedbefd2ec23d78acd43602624d31a8ef32c64736f6c634300060c0033",".code":[{"begin":22589,"end":25693,"name":"PUSHDEPLOYADDRESS","source":0},{"begin":22589,"end":25693,"name":"ADDRESS","source":0},{"begin":22589,"end":25693,"name":"EQ","source":0},{"begin":22589,"end":25693,"name":"PUSH","source":0,"value":"80"},{"begin":22589,"end":25693,"name":"PUSH","source":0,"value":"40"},{"begin":22589,"end":25693,"name":"MSTORE","source":0},{"begin":22589,"end":25693,"name":"PUSH","source":0,"value":"0"},{"begin":22589,"end":25693,"name":"DUP1","source":0},{"begin":22589,"end":25693,"name":"REVERT","source":0}]}}},"methodIdentifiers":{}},"ewasm":{"wasm":""},"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around BEP20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeBEP20 for IBEP20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeBEP20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TEXOToken.sol\":\"SafeBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"TEXOToken.sol\":{\"keccak256\":\"0xacc45f0b370c1e8eef6fa316fa4e192b1a5d943a6d83098c28c3ff335663c28c\",\"urls\":[\"bzz-raw://096072d16bf06754186b7570e093e3453f88e190b4ba9d95a0100ee0cece0527\",\"dweb:/ipfs/QmPAygK2P33BCj6o4S2rNa5ZBCXrcJgV23qyh5bYU6513e\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}
